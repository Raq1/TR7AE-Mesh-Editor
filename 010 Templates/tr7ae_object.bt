#include "tr7ae_section.bt"

typedef enum <int> {
  TR7AE_lara = 3,
  TRA_lara_dgang = 11,
  TRA_lara_gold = 12,
  TRA_lara_catsuit = 13,
  TRA_lara_wetsuit = 14,
  TRA_lara_legend = 15,
  TRA_lara_aod = 16,
  TRA_lara_sport = 17,
  TRA_lara_natla = 18,
  TRA_lara_classic = 19,
  TRL_lara_young = 12,
  TRL_lara_winter = 13,
  TRL_lara_biker = 14,
  TRL_lara_evening = 15,
  TRL_lara_evening_alt = 16,
  TRL_lara_biker_alt = 17,
  TRL_lara_goth = 18,
  TRL_lara_goth_alt = 19,
  TRL_lara_classic = 20,
  TRL_lara_sport = 21,
  TRL_lara_catsuit = 22,
  TRL_lara_catsuit_snow = 23,
  TRL_lara_alt = 24,
  TRL_lara_alta = 25,
  TRL_lara_altb = 26,
  TRL_lara_altc = 27,
  TRL_lara_evening_red = 28,
  TRL_lara_evening_alta = 29,
  TRL_lara_sport_alt = 30,
  TRL_lara_classic_alt = 31,
  TRL_lara_suit = 32,
  TRL_lara_winter_alt = 33,
  TRL_lara_winter_alta = 34,
  TRL_lara_bikini = 35,
  TRL_lara_special_forces = 36,
  TRL_lara_suit_alt = 37,
  TRL_lara_bikini_alt = 38,
  TRL_lara_special_forces_alt = 39,
  TRL_amanda_player = 40,
  TRL_amanda_player_alt = 41,
  TRL_lara_winter_nj = 42,
  TRL_lara_winter_alt_nj = 43,
  TRL_lara_winter_alta_nj = 44,
  TRL_lara_biker_nj = 45,
  TRL_lara_altd = 195,
} uniqueIDFlag;

struct {
  int oflags;
  int oflags2;
  uniqueIDFlag uniqueID <name="uniqueID">;
  uint guiID;
  int functionTableID;
  int32 obsoleteSoundBank;
  int16 numModels;
  int16 numAnims;
  int32 numAnimPatterns;
  uint32 modelList;
  uint32 animList;
  uint32 animFXList;
  uint32 animPatternList;
  int introDist;
  int vvIntroDist;
  int removeDist;
  int vvRemoveDist;
  uint32 baseData;
  uint32 data;
  uint32 name;
  uint32 soundData;
  int16 sectionA;
  int16 sectionB;
  int16 sectionC;
  int16 numberOfEffects;
  uint32 effectList;
  uint32 effectData;
  uint32 objectDTPData;
  uint32 textureLoadList;
  uint32 childObjectList;
  int lod1Dist;
  int lod2Dist;
  char lod1Model;
  char lod2Model;
  char shadowModel;
  char lightingOverride;
  float maxCheckeeDistance;
  int rdSetupList;
} Object;

 FSeek(Object.modelList + SectionInfoSize);

struct {

    int model;

} modelList[Object.numModels];

 FSeek(Object.animList + SectionInfoSize);

struct {

    int anim;

} animList[Object.numAnims];

 FSeek(Object.animPatternList + SectionInfoSize);

struct {

    int animPattern;

} animPatternList[Object.numAnimPatterns];